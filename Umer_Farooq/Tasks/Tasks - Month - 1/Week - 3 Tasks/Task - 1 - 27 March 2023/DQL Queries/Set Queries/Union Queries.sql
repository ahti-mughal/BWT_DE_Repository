-- Union:

-- The UNION operator combines the results of two or more SELECT statements into a single result set 
-- that includes all the rows from each SELECT statement. 
-- The UNION operator eliminates duplicate rows from the result set.

-- Rules:
--Every SELECT statement within UNION must have the same number of columns
--The columns must also have similar data types
--The columns in every SELECT statement must also be in the same order

-- Points to Remember:
--The join such as INNER JOIN or LEFT JOIN combines columns from two tables while the UNION combines rows from two queries.

--What is the complete list of all customers and employees in the Northwind database?
SELECT ContactName, 'Customer' AS Type -- Type is computed value that is generated by the SELECT statement
FROM Customers
UNION
SELECT CONCAT(FirstName, LastName) AS EmployeeName, 'Employee' AS Type
FROM Employees
ORDER BY ContactName, Type;

--Which products have been ordered by customers in Germany and by customers in the USA?
--Here 3 tables are used Products, Order Details, Customers

SELECT ProductName, 'Germany' AS TYPE
FROM Products
	WHERE ProductID IN(
		SELECT ProductID
		FROM [Order Details]
		WHERE OrderID IN(
			SELECT OrderID 
			FROM Orders
			WHERE CustomerID IN(
			SELECT CustomerID
			FROM Customers
			WHERE Country = 'Germany' -- We cant use AND, bcz a customer in USA will place order in USA 
			)))
UNION
SELECT ProductName, 'USA' AS TYPE
FROM Products
WHERE ProductID IN(
	SELECT ProductID
	FROM [Order Details]
	WHERE OrderID IN(
	SELECT OrderID
	FROM Orders
	WHERE CustomerID IN(
	SELECT CustomerID
	FROM Customers
	WHERE Country = 'USA'
	)
	)
);

--How many different products have been ordered by customers, 
--and how many different products have been ordered by employees?

SELECT ProductName, 'Customer' AS Type
FROM Products
WHERE ProductID IN(
	SELECT ProductID
	FROM [Order Details]
	WHERE OrderID IN(
		SELECT OrderID
		FROM Orders
		WHERE CustomerID IN(
			SELECT CustomerID
			FROM Customers
		)
	)
)
UNION
SELECT ProductName, 'Employee' AS Type
FROM Products
WHERE ProductID IN(
	SELECT ProductID
	FROM [Order Details]
	WHERE OrderID IN(
		SELECT OrderID
		FROM Orders
		WHERE EmployeeID IN(
			SELECT EmployeeID
			FROM Employees
		)
	)
);
--By default, the UNION operator removes all duplicate rows from the result sets. However, 
--if you want to retain the duplicate rows, you need to specify the ALL keyword is explicitly as shown below:
--UNION ALL

--What is the complete list of all orders in the Northwind database, including duplicate orders?
SELECT * FROM Orders
UNION ALL
SELECT * FROM Orders;

--How many total products have been ordered by customers and by employees, including duplicates?
SELECT COUNT(ProductID) AS TotalProduct, 'Customer' AS Type
FROM Products
WHERE ProductID IN(
	SELECT ProductID 
	FROM [Order Details]
	WHERE OrderID IN(
		SELECT OrderID
		FROM Orders
		WHERE CustomerID IN(
			SELECT CustomerID
			FROM Customers
		)
	)
)

UNION

SELECT COUNT(ProductID) AS TotalProduct, 'Employee' AS Type
FROM Products
WHERE ProductID IN(
	SELECT ProductID 
	FROM [Order Details]
	WHERE OrderID IN(
		SELECT OrderID
		FROM Orders
		WHERE EmployeeID IN(
			SELECT EmployeeID
			FROM Employees
		)
	)
);


-- Which customers have placed orders and which employees have created orders, including duplicates?
SELECT ContactName, 'Customer' AS Type
FROM Customers
WHERE CustomerID IN(SELECT CustomerID FROM Orders)

UNION ALL

SELECT CONCAT(FirstName,LastName) AS ContactName, 'Employee' AS Type
FROM Employees
WHERE EmployeeID IN(SELECT EmployeeID FROM Orders);